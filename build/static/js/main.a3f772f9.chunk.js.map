{"version":3,"sources":["riftlogo1.png","components/Rating.js","components/Mission.js","components/NewRating.js","App.js","index.js"],"names":["module","exports","Component","Mission","Container","class","rateURL","window","CURRENT_HOST","rating_types","rating_object","ratingTypeToIndex","rating_type","i","length","NewRating","props","state","ratings","additionalRating","onRatingClick","bind","onCommentChange","onSubmit","index","console","log","this","new_ratings","j","setState","event","target","value","axios","post","user_name","user_email","comment","ListGroup","variant","meal","items","map","item","Item","style","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","eventKey","Collapse","Body","Row","Col","Form","onClick","Label","Control","rows","onChange","uploadURL","completedMealsURL","meal_types","menu","App","ratings_input","submit_detector","ready_to_send","completed","submitRating","collectInputData","renderRating","get","then","response","new_completed","data","breakfast","lunch","dinner","Navbar","Text","href","id","className","type","button","mealToIndex","new_submit","type_constant","user","complete_type","alert","input","meal_length","inputs_processing","push","prevProps","prevState","snapshot","meal_type","title","rel","integrity","crossorigin","bg","expand","color","Brand","aria-controls","Nav","Link","NavDropdown","Divider","renderSignInButton","exact","path","render","to","component","renderGreeting","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a3f772f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/riftlogo1.6c4a7800.png\";","import React, { Component } from 'react';\nimport { Button, Jumbotron, Navbar, Nav, FormControl, NavDropdown, Form, Card, Container, Dropdown, Accordion} from 'react-bootstrap';\n\nvar inner_rating_style={\n  \"display\":\"inline\"\n}\n\nclass Rating extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      ratings:[0,0,0,0,0],\n      comment:\"No comment\",\n      isRating:false,\n      additionalRating:\"\"\n    }\n    this.onRatingChange = this.onRatingChange.bind(this)\n    this.onSelectChange = this.onSelectChange.bind(this)\n    this.onAddRatingClick = this.onAddRatingClick.bind(this)\n    this.onAddRatingChange = this.onAddRatingChange.bind(this)\n  }\n\n  starStyle(i){\n    var color = \"black\"\n    if(this.state.ratings[i]==0){\n      color=\"white\"\n    }\n    else{\n      color=\"#f2c213\"\n    }\n    return{\n      \"display\":\"inline\",\n      \"fontSize\":40,\n      \"margin\":5,\n      \"cursor\":\"pointer\",\n      \"color\":color,\n      \"textShadow\":\"0px 1px black, 0px -1px black, 1px 0px black, -1px 0px black\",\n    }\n  }\n\n  onRatingChange(i){\n    var ratings=this.state.ratings\n    if(!ratings[i]){\n      for(let j=0; j<i+1; j++){\n        ratings[j] = true\n      }\n    }\n    else{\n      for(let j=i+1; j<ratings.length; j++){\n        ratings[j] = false\n      }\n    }\n    this.setState({ratings})\n  }\n\n  renderRating = () => {\n    let ratings=[]\n    for(let i=0; i<5; i++){\n          ratings.push(\n            <div\n              className=\"rating-star\"\n              style={this.starStyle(i)}\n              label={(i+1).toString()}\n              key={i}\n              type={'radio'}\n              id={`custom-inline-radio-`+(i+1).toString()}\n              onClick={()=>{this.onRatingChange(i)}}\n            >\n            \tâ˜…\n            </div>\n        )\n    }\n    return ratings\n  }\n\n  onSelectChange(event){\n    this.setState({comment:event.target.value})\n  }\n\n\n  onAddRatingClick(){\n    var state = this.state.isRating\n    state = !this.state.isRating\n    this.setState({isRating:state})\n  }\n\n  onAddRatingChange(event){\n    this.setState({additionalRating:event.target.value})\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    var type_constant = 99\n    var type = this.props.type\n    if(type==\"breakfast\"){\n      type_constant = 1\n    }\n    else if(type==\"lunch\"){\n      type_constant = 2\n    }\n    else if(type==\"dinner\"){\n      type_constant = 3\n    }\n    // Check if the suplied props is changed\n    if(prevProps.submitDetector !== this.props.submitDetector) {\n      if(prevProps.submitDetector + type_constant == this.props.submitDetector){\n\n        var input_data = {\n          meal_name:this.props.name,\n          meal_title:this.props.title,\n          star_rating:((this.state.ratings).reduce((a,b) => a + b, 0)).toString(),\n          comment:this.state.comment,\n          additionalRating:this.state.additionalRating\n        }\n        this.props.collect_function(input_data, this.props.meal_length)\n      }  // run the function with the suplied new property\n    }\n  }\n\n  renderAddRatingTextbox(){\n    if(this.state.isRating){\n      return(\n        <div className=\"additional-rating\">\n          <Form.Control\n          as=\"textarea\"\n          rows=\"3\"\n          value={this.state.additionalRating}\n          onChange={(event)=>{this.onAddRatingChange(event)}}>\n          </Form.Control>\n        </div>\n      )\n    }\n    return(\n      <div></div>\n    )\n  }\n\n  render(){\n    if(this.props.user && !this.props.is_complete){\n      return(\n        <div class=\"inner_rating_style\">\n            <Form>\n                <div key={`custom-inline-radio`} className=\"mb-3\" style={{\"marginLeft\":10}}>\n                  {<div>\n                    <div style={{\"display\":\"inline\"}} className=\"stars\">{this.renderRating()}</div>\n                    <select className=\"select\" value={this.state.comment} name=\"descriptions\" style={{\"display\":\"inline\", \"fontSize\":20, \"marginLeft\":15, \"border\":\"1px solid black\"}}\n                    onChange={(event) => {this.onSelectChange(event)}} className=\"rating-select\">\n                      <option value=\"No comment\">No comment</option>\n                      <option value=\"Perfect!\">Perfect!</option>\n                      <option value=\"Too salty\">Too salty</option>\n                      <option value=\"Too sweet\">Too sweet</option>\n                      <option value=\"Overcooked\">Overcooked</option>\n                      <option value=\"Undercooked\">Undercooked</option>\n                      <option value=\"Lacking flavor/spice\">Lacking flavor/spice</option>\n                      <option value=\"Bitter\">Bitter</option>\n                    </select>\n                    <div><Button className=\"add-rating-button\" onClick={this.onAddRatingClick}><p className=\"add-rating-button-text\">+ Additional comments</p></Button></div>\n                    {this.renderAddRatingTextbox()}\n                  </div>}\n                </div>\n            </Form>\n        </div>\n      )\n    }\n    else{\n      return <div></div>\n    }\n  }\n}\n\nexport default Rating;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { Button, Container } from 'react-bootstrap';\n\nexport default class Mission extends Component {\n  render(){\n    return(\n      <Container>\n      <h1 class=\"mission-title\">Mission</h1>\n      <p>\n      Replace this\n      </p>\n      <p>\n      RIFT is sleek, fast and convenient. Each meal rating takes less than a minute and the dining hall staff can see your feedback instantly. It is important that you try to give as much feedback as possible and that you make your rating a constructive criticism.\n      </p>\n      <p>\n      If you encounter any problems with the software or if you have suggestions about the website, feel free to contact Alper Canberk at acanberk21@lawrenceville.org\n      </p>\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Jumbotron, Navbar, Nav, Row, Col, FormControl, NavDropdown, Form, Card, Container, Dropdown, Accordion, ListGroup} from 'react-bootstrap';\nimport axios from 'axios';\n\nvar inner_rating_style={\n  \"display\":\"inline\"\n}\n\nvar rateURL = window.CURRENT_HOST + \"receive_rating\";\n\nvar rating_types = [\"Salt\", \"Spice\", \"Sweetness\", \"Cooking Time\"]\n\nvar rating_object={\n  \"Salt\":[\"Too little\", \"Just right\", \"Too much\"],\n  \"Spice\":[\"Too little\", \"Just right\", \"Too much\"],\n  \"Sweetness\":[\"Too little\", \"Just right\", \"Too much\"],\n  \"Cooking Time\":[\"Undercooked\", \"Just right\", \"Overcooked\"]\n}\n\nfunction ratingTypeToIndex(rating_type){\n  for(var i=0;i<rating_types.length;i++){\n    if(rating_types[i] == rating_type){\n      return i\n    }\n  }\n}\n\nclass NewRating extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      ratings:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],\n      additionalRating:\"\"\n    }\n    this.onRatingClick = this.onRatingClick.bind(this)\n    this.onCommentChange = this.onCommentChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    // this.onAddRatingChange = this.onAddRatingChange.bind(this)\n  }\n\n  onRatingClick(rating_type, index){\n    console.log(rating_type);\n    console.log(index);\n    console.log(this.state.ratings)\n    var new_ratings = this.state.ratings\n    for(var j=0;j<3;j++){\n      if(j == index){\n        new_ratings[ratingTypeToIndex(rating_type)][j] = 1\n      }\n      else{\n        new_ratings[ratingTypeToIndex(rating_type)][j] = 0\n      }\n    }\n    console.log(new_ratings)\n    this.setState({ratings:new_ratings});\n  }\n\n  onCommentChange(event){\n    this.setState({additionalRating:event.target.value});\n  }\n\n  onSubmit(){\n    console.log(this.state)\n    axios.post(rateURL, {\n      user_name: window.user_name,\n      user_email: window.user_email,\n      ratings: this.state.ratings,\n      comment: this.state.additionalRating\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <ListGroup variant=\"flush\">\n          {this.props.meal.items.map((item) => {\n            return(\n              <ListGroup.Item style={{\"paddingTop\":20}}>\n                <Accordion defaultActiveKey=\"0\" class=\"accordion\">\n                  <Card>\n                    <Card.Header>\n                      <Accordion.Toggle as={Button} variant=\"none\" eventKey=\"0\">\n                        <h5>{item}</h5>\n                      </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                      <Card.Body>\n                        <div class=\"rating-boxes\">\n\n                          <Row>\n\n                            {['Salt','Spice','Sweetness','Cooking Time'].map((rating_type)=>{\n                              return(\n                                <Col><h6>{rating_type}</h6>\n                                  <Form>\n                                    <div\n                                      onClick={() => {this.onRatingClick(rating_type, 0)}}\n                                      class={this.state.ratings[ratingTypeToIndex(rating_type)][0] ? \"filled-option\":\"unfilled-option\"}>\n                                      {rating_object[rating_type][0]}\n                                    </div>\n                                    <div\n                                      onClick={() => {this.onRatingClick(rating_type, 1)}}\n                                      class={this.state.ratings[ratingTypeToIndex(rating_type)][1] ? \"filled-option\":\"unfilled-option\"}>\n                                      {rating_object[rating_type][1]}\n                                    </div>\n                                    <div\n                                      onClick={() => {this.onRatingClick(rating_type, 2)}}\n                                      class={this.state.ratings[ratingTypeToIndex(rating_type)][2] ? \"filled-option\":\"unfilled-option\"}>\n                                      {rating_object[rating_type][2]}\n                                    </div>\n\n                                  </Form>\n                                </Col>\n                              )\n                            })}\n\n                          </Row>\n                        </div>\n\n                        <div style={{\"marginTop\":10}}>\n                          <Form>\n                            <Form.Label>Additional Comments</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"2\" onChange={this.onCommentChange} />\n                          </Form>\n                        </div>\n\n                        <div class=\"submit-button\">\n                          <Button onClick={this.onSubmit}>Submit</Button>\n                        </div>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                  {\n\n                      /* <div key={`custom-inline-radio`} className=\"mb-3\" style={{\"marginLeft\":10}}>\n                      {<div>\n                      <div style={{\"display\":\"inline\"}} className=\"stars\">{this.renderRating()}</div>\n                      <select className=\"select\" value={this.state.comment} name=\"descriptions\" style={{\"display\":\"inline\", \"fontSize\":20, \"marginLeft\":15, \"border\":\"1px solid black\"}}\n                      onChange={(event) => {this.onSelectChange(event)}} className=\"rating-select\">\n                      <option value=\"No comment\">No comment</option>\n                      <option value=\"Perfect!\">Perfect!</option>\n                      <option value=\"Too salty\">Too salty</option>\n                      <option value=\"Too sweet\">Too sweet</option>\n                      <option value=\"Overcooked\">Overcooked</option>\n                      <option value=\"Undercooked\">Undercooked</option>\n                      <option value=\"Lacking flavor/spice\">Lacking flavor/spice</option>\n                      <option value=\"Bitter\">Bitter</option>\n                      </select>\n                      <div><Button className=\"add-rating-button\" onClick={this.onAddRatingClick}><p className=\"add-rating-button-text\">+ Additional comments</p></Button></div>\n                      {this.renderAddRatingTextbox()}\n                      </div>}\n                  </div> */}\n                </Accordion>\n              </ListGroup.Item>\n            )})}\n            </ListGroup>\n      </div>\n    )\n  }\n}\n\nexport default NewRating;\n","import React, {Component}  from 'react';\nimport Rating from './components/Rating.js'\nimport Mission from './components/Mission.js'\n// import FullRating from './components/FullRating.js'\nimport NewRating from './components/NewRating.js'\n\nimport { Button, Jumbotron, Navbar, Nav, FormControl, NavDropdown, Form, Card, Container, ListGroup } from 'react-bootstrap';\nimport './App.css';\nimport axios from \"axios\"\nimport Logo from \"./riftlogo1.png\"\n\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Redirect, IndexRedirect } from \"react-router-dom\";\n\nvar uploadURL = window.CURRENT_HOST + \"complete_meal\";\nvar completedMealsURL = window.CURRENT_HOST + \"completed_meals\";\nvar rateURL = window.CURRENT_HOST + \"receive_rating\";\n\n\n// var menu = JSON.parse(window.menu.replace(new RegExp('u&#39;', 'g'),'\"').replace(new RegExp('&#39;', 'g'),'\"'))\n\nvar meal_types = [\"breakfast\", \"lunch\", \"dinner\"]\n\nvar menu = {\n  \"breakfast\":{\n    \"date\":\"August 19\",\n    \"time\":0,\n    \"title\":\"Breakfast - August 19\",\n    \"items\":[\"Belgium Waffles\", \"Homefried Potatoes\", \"Sausage Links\", \"Assorted Pastries\"],\n    \"type\":\"breakfast\"\n  },\n  \"lunch\":{\n    \"date\":\"August 19\",\n    \"time\":0,\n    \"title\":\"Lunch - August 19\",\n    \"items\":[\"French Onion Soup\", \"Mako Shark Tacos\", \"Kale Sautee\", \"Ice Cream\"],\n    \"type\":\"breakfast\"\n  },\n  \"dinner\":{\n    \"date\":\"August 19\",\n    \"time\":0,\n    \"title\":\"Dinner - August 19\",\n    \"items\":[\"Flank Steak\", \"Mashed Potatoes\", \"Seasonal Vegetables\", \"Ice Cream\"],\n    \"type\":\"breakfast\"\n  }\n}\n\nclass App extends Component{\n\n  constructor(props){\n    super(props)\n    this.state={\n      ratings_input:[],\n      submit_detector:0,\n      ready_to_send:false,\n      completed:[true,true,true]\n    }\n    this.submitRating = this.submitRating.bind(this)\n    this.collectInputData = this.collectInputData.bind(this)\n    this.renderRating = this.renderRating.bind(this)\n  }\n\n  componentWillMount(){\n    console.log(\"Completed meals url:\")\n    console.log(completedMealsURL)\n    axios.get(completedMealsURL).then(\n      (response)=>{\n        console.log(\"Component will mount!\")\n        console.log(response)\n        var new_completed = this.state.completed\n        if(!response.data.breakfast){\n          new_completed[0]=false\n        }\n        if(!response.data.lunch){\n          new_completed[1]=false\n        }\n        if(!response.data.dinner){\n          new_completed[2]=false\n        }\n        this.setState({\n          completed:new_completed\n        })\n      }\n    )\n  }\n\n  renderSignInButton(){\n    if(window.user_email){\n      return(\n        <Navbar.Text>\n          <a href=\"/logout\"><Button variant=\"outline\" id=\"sign-in-button\">Sign Out</Button></a>\n        </Navbar.Text>\n      )}\n      else{\n        return(\n          <Navbar.Text>\n            <a href=\"/auth/google\"><Button variant=\"outline\" id=\"sign-in-button\">Sign In</Button></a>\n          </Navbar.Text>\n        )\n      }\n    }\n\n  renderGreeting(){\n    if(window.user_name){\n      return(\n        <h1 className=\"greeting\">Welcome {window.user_name}, what do you think about Irwin today?</h1>\n      )\n    }\n    else{\n      return(\n        <p className=\"sign-in-prompt\">You must sign in with an Lville account in order to be able to rate the food.</p>\n      )\n    }\n  }\n\n  renderSubmitRating(type){\n    var button = \"\"\n    if(window.user_email && !this.state.completed[this.mealToIndex(type)]){\n      button = <Button onClick={()=>{this.submitRating(type)}} style={{\"backgroundColor\":\"#BA1A26\", \"color\":\"white\", \"borderColor\":\"#BA1A26\", \"height\":40, \"width\":200, \"margin\":\"5px auto\"}}><h5>Submit Rating</h5></Button>\n    }\n    else if(window.user_email && this.state.completed[this.mealToIndex(type)]){\n      button = <p className=\"already-rated\">You have already rated this meal today.</p>\n    }\n    return button\n  }\n\n  mealToIndex(type){\n    if(type == \"breakfast\"){\n      return 0\n    }\n    if(type == \"lunch\"){\n      return 1\n    }\n    if(type == \"dinner\"){\n      return 2\n    }\n  }\n\n  submitRating(type){\n\n    this.setState({ratings_input:[]});\n    this.setState({ready_to_send:false})\n\n    if(!this.state.completed[this.mealToIndex(type)]){\n      console.log(\"rating!\")\n      var new_submit = this.state.submit_detector\n      var type_constant = 0\n      if(type==\"breakfast\"){\n        type_constant = 1\n      }\n      else if(type==\"lunch\"){\n        type_constant = 2\n      }\n      else if(type==\"dinner\"){\n        type_constant = 3\n      }\n      new_submit = new_submit + type_constant\n\n      this.setState({submit_detector:new_submit});\n    }\n    else{\n      console.log(\"Bruh you already rated this!\")\n    }\n\n    axios\n          .post(uploadURL, {\n            user: window.user_email,\n            complete_type:type\n          })\n          .then((response) => {\n            console.log(response)\n            alert(response.data);\n            if(response.data = \"Rating successful!\"){\n              console.log(\"rating successful! - confirmed\")\n              var new_completed = this.state.completed\n              new_completed[this.mealToIndex(type)] = true\n              this.setState({completed: new_completed})\n            }\n          });\n  }\n\n\n  collectInputData(input, meal_length){\n    var inputs_processing = this.state.ratings_input\n    inputs_processing.push(input)\n    this.setState({ratings_input:inputs_processing})\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    console.log(\"Component did update!\")\n    console.log(this.state)\n    if(prevState.ratings_input != this.state.ratings_input){\n      if(this.state.ratings_input.length > 0){\n        console.log(\"ready! make request!!\");\n        axios.post(rateURL, {\n          user_name: window.user_name,\n          user_email: window.user_email,\n          ratings: this.state.ratings_input\n        })\n      }\n      else{\n        console.log(\"nope, you can't rate this anymore\")\n      }\n    }\n  }\n\n  renderRating(meal_types){\n    return(\n      <div>\n        {meal_types.map((meal_type) => {\n          return(\n            <Card style={{\"marginLeft\":30, \"marginRight\":30, \"marginTop\":30}}>\n              <Card.Header className=\"menu-title\"><h4 style={{\"margin\":15}}>{menu[meal_type].title}</h4></Card.Header>\n              <NewRating meal={menu[meal_type]} />\n\n            </Card>\n          )\n          // <ListGroup variant=\"flush\">\n          //   {menu[meal_type].items.map((item) => {\n          //     console.log(item)\n          //     return(\n          //       <ListGroup.Item style={{\"paddingTop\":20}}>\n          //         <div><h5 class=\"food_title\">{item}</h5>\n          //           <Rating\n          //             title={menu[meal_type].title}\n          //             meal_length={menu[meal_type].items.length}\n          //             name={menu[meal_type].name}\n          //             type={menu[meal_type].type}\n          //             submitDetector={this.state.submit_detector}\n          //             collect_function={this.collectInputData}\n          //             name={item}\n          //             user={window.user_email}\n          //             is_complete={this.state.completed[this.mealToIndex(menu[meal_type].type)]}\n          //           />\n          //         </div>\n          //       </ListGroup.Item>)\n          //   })}\n          // </ListGroup>\n          // {this.renderSubmitRating(menu[meal_type].type)}\n        })}\n      </div>\n    )\n  }\n\n  readyToSend(){\n    this.setState({ready_to_send:true})\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n            integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n            crossorigin=\"anonymous\"\n          />\n          <Navbar bg=\"light\" expand=\"lg\" color=\"red\">\n            <Navbar.Brand href=\"#home\">\n              <span style={{\"font-size\":30}}>LIFE</span>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#mission\">Mission</Nav.Link>\n                <NavDropdown title=\"Statistics\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"#action/3.1\">Work</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.2\">In</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.3\">Progress</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action/3.4\">Check later</NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n              {this.renderSignInButton()}\n            </Navbar.Collapse>\n          </Navbar>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n          <Route path=\"/mission\" component={Mission} />\n          <Route path=\"/home\" render={() => <div>{this.renderGreeting()}{this.renderRating(meal_types)}</div>}/>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}